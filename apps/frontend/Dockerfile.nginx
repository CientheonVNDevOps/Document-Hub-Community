# Frontend Dockerfile - Optimized with Nginx for production
# Build with: docker buildx build --platform linux/amd64 -f Dockerfile.nginx -t your-registry/frontend:latest .

# Stage 1: Build stage with Bun
FROM oven/bun:1-alpine AS builder

WORKDIR /app

# Copy package files
COPY package.json bun.lock* ./

# Install dependencies with BuildKit cache mount
RUN --mount=type=cache,target=/root/.bun/install/cache \
    bun install --frozen-lockfile

# Copy source code
COPY . .

# Build the application with API URL
# Default to backend URL, can be overridden at build time
ARG VITE_API_URL=http://dc0kc00ko8cgo84k4ok4w0kw.72.60.41.15.sslip.io
ENV VITE_API_URL=$VITE_API_URL
RUN NODE_OPTIONS="--no-deprecation" VITE_API_URL="$VITE_API_URL" bun run build

# Stage 2: Production stage with Nginx
FROM nginx:alpine AS production

# Install sed for runtime URL replacement
RUN apk add --no-cache sed

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy entrypoint script
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Environment variable for runtime URL replacement
ENV VITE_API_URL=http://dc0kc00ko8cgo84k4ok4w0kw.72.60.41.15.sslip.io

# Add health check script
RUN echo '#!/bin/sh' > /health.sh && \
    echo 'wget --no-verbose --tries=1 --spider http://localhost/health || exit 1' >> /health.sh && \
    chmod +x /health.sh

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/health || exit 1

# Use entrypoint to substitute API URL at runtime
ENTRYPOINT ["/entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"]

